
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASIGNARleftSUMARESTAMULTDIVleftCHARINTFLOATrightUMINUSrightPUNTOCOMAleftSIrightSINOleftPARAleftNUMERALrightINCLUDEleftPARIZQLLAIZQrightPARDERLLADERAND ASIGNAR BOOL CADENA CHAR CIN COMA COMDOB CORDER CORIZQ COUT DISTINTO DIV DO ENDL ENTERO FLOAT FLOTANTE GET IDENTIFICADOR IGUAL INCLUDE INT LLADER LLAIZQ LOGIC MAYORDER MAYORIGUAL MAYORIZQ MAYORQUE MENORIGUAL MENORQUE MIENTRAS MINUSMINUS MODULO MULT NAMESPACE NOT NUMERAL NUMERO OPERTACION_MATH OR PARA PARDER PARIZQ PLUSPLUS POTENCIA PUNTOCOMA RELATIONAL RESTA RETURN SI SINO STD SUMA USING VOID comments comments_ONELineempty :\n    declaracion_asignar : CHAR IDENTIFICADOR PUNTOCOMA \n                | INT IDENTIFICADOR PUNTOCOMA\n                | FLOAT IDENTIFICADOR PUNTOCOMA\n\n                | CHAR IDENTIFICADOR CORIZQ  CORDER PUNTOCOMA \n                | INT IDENTIFICADOR CORIZQ  CORDER PUNTOCOMA \n                | FLOAT IDENTIFICADOR CORIZQ  CORDER PUNTOCOMA\n\n                | CHAR IDENTIFICADOR CORIZQ NUMERO CORDER PUNTOCOMA \n                | INT IDENTIFICADOR CORIZQ NUMERO CORDER PUNTOCOMA \n                | FLOAT IDENTIFICADOR CORIZQ NUMERO CORDER PUNTOCOMA\n\n                | CHAR IDENTIFICADOR COMA declaracion_asignar\n                | INT IDENTIFICADOR COMA declaracion_asignar\n                | FLOAT IDENTIFICADOR COMA declaracion_asignar\n\n                | CHAR IDENTIFICADOR CORIZQ CORDER COMA declaracion_asignar \n                | INT IDENTIFICADOR CORIZQ  CORDER COMA declaracion_asignar\n                | FLOAT IDENTIFICADOR CORIZQ CORDER COMA declaracion_asignar\n\n                | CHAR IDENTIFICADOR CORIZQ NUMERO CORDER COMA declaracion_asignar \n                | INT IDENTIFICADOR CORIZQ  NUMERO CORDER COMA declaracion_asignar\n                | FLOAT IDENTIFICADOR CORIZQ NUMERO CORDER COMA declaracion_asignar\n\n                | IDENTIFICADOR COMA declaracion_asignar\n                | IDENTIFICADOR PUNTOCOMA\n\n                | IDENTIFICADOR CORIZQ CORDER COMA declaracion_asignar\n                | IDENTIFICADOR CORIZQ CORDER PUNTOCOMA\n\n                | IDENTIFICADOR CORIZQ NUMERO CORDER COMA declaracion_asignar\n                | IDENTIFICADOR CORIZQ NUMERO CORDER PUNTOCOMA\n\n                | INT IDENTIFICADOR ASIGNAR NUMERO PUNTOCOMA\n                | CHAR IDENTIFICADOR ASIGNAR CADENA PUNTOCOMA\n                | FLOAT IDENTIFICADOR ASIGNAR NUMERO PUNTOCOMA\n\n                | IDENTIFICADOR ASIGNAR NUMERO PUNTOCOMA\n                | IDENTIFICADOR ASIGNAR CADENA PUNTOCOMA\n                \n                | INT IDENTIFICADOR ASIGNAR IDENTIFICADOR PUNTOCOMA\n                | CHAR IDENTIFICADOR ASIGNAR IDENTIFICADOR PUNTOCOMA\n                | FLOAT IDENTIFICADOR ASIGNAR IDENTIFICADOR PUNTOCOMA\n                \n    \n    if : SI PARIZQ condiciones_logicas PARDER\n        | SI PARIZQ condiciones_logicas PARDER LLAIZQ instruccion LLADER\n        | SI PARIZQ condiciones_logicas PARDER LLAIZQ instruccion LLADER SINO PARDER LLAIZQ instruccion LLADER\n    \n    comentario_lineal : comments_ONELine  \n    \n    comentario_bloque : comments  \n    \n    operaciones_math : NUMERO SUMA NUMERO PUNTOCOMA\n                |   NUMERO RESTA NUMERO PUNTOCOMA\n                |   NUMERO MULT NUMERO PUNTOCOMA\n                |   NUMERO DIV NUMERO PUNTOCOMA\n                |   NUMERO POTENCIA NUMERO PUNTOCOMA\n                |   NUMERO MODULO NUMERO PUNTOCOMA \n\n                |   NUMERO SUMA NUMERO operaciones_math\n                |   NUMERO RESTA NUMERO operaciones_math\n                |   NUMERO MULT NUMERO operaciones_math\n                |   NUMERO DIV NUMERO operaciones_math\n                |   NUMERO POTENCIA NUMERO operaciones_math\n                |   NUMERO MODULO NUMERO operaciones_math\n\n                |   SUMA NUMERO PUNTOCOMA\n                |   RESTA NUMERO PUNTOCOMA\n                |   MULT NUMERO PUNTOCOMA\n                |   DIV NUMERO PUNTOCOMA\n                |   POTENCIA NUMERO PUNTOCOMA\n                |   MODULO NUMERO PUNTOCOMA\n           \n    \n    operacion_booleana : expresion AND expresion \n                |  expresion OR expresion \n                |  expresion NOT expresion \n    \n    condiciones_logicas : IDENTIFICADOR RELATIONAL IDENTIFICADOR\n            | NUMERO RELATIONAL NUMERO\n            | IDENTIFICADOR RELATIONAL IDENTIFICADOR condiciones_logicas\n            | IDENTIFICADOR LOGIC condiciones_logicas\n            | BOOL \n            | BOOL LOGIC condiciones_logicas\n\n    \n      while : MIENTRAS PARIZQ condiciones_logicas PARDER LLAIZQ instruccion LLADER \n    \n      do : DO PARIZQ instruccion PARDER while \n    \n    instruccion : declaracion_asignar\n                | if\n                | comentario_lineal\n                | comentario_bloque\n                | operacion_booleana\n                | condiciones_logicas\n                | while\n                | do\n                | empty\n\n    \n    expresion  :   INT IDENTIFICADOR CORIZQ ENTERO CORDER ASIGNAR LLAIZQ ENTERO COMA ENTERO COMA ENTERO COMA ENTERO LLADER PUNTOCOMA\n\n    \n    expresion : NUMERAL INCLUDE MENORQUE expresion MAYORQUE\n\n    expresion : RESTA expresion %prec UMINUSexpresion : COMDOB expresion COMDOBexpresion : IDENTIFICADOR'
    
_lr_action_items = {'$end':([0,1,],[-1,0,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'empty':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> empty","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','analizador_sintactico.py',25),
  ('declaracion_asignar -> CHAR IDENTIFICADOR PUNTOCOMA','declaracion_asignar',3,'p_declaracion_asignar','analizador_sintactico.py',32),
  ('declaracion_asignar -> INT IDENTIFICADOR PUNTOCOMA','declaracion_asignar',3,'p_declaracion_asignar','analizador_sintactico.py',33),
  ('declaracion_asignar -> FLOAT IDENTIFICADOR PUNTOCOMA','declaracion_asignar',3,'p_declaracion_asignar','analizador_sintactico.py',34),
  ('declaracion_asignar -> CHAR IDENTIFICADOR CORIZQ CORDER PUNTOCOMA','declaracion_asignar',5,'p_declaracion_asignar','analizador_sintactico.py',36),
  ('declaracion_asignar -> INT IDENTIFICADOR CORIZQ CORDER PUNTOCOMA','declaracion_asignar',5,'p_declaracion_asignar','analizador_sintactico.py',37),
  ('declaracion_asignar -> FLOAT IDENTIFICADOR CORIZQ CORDER PUNTOCOMA','declaracion_asignar',5,'p_declaracion_asignar','analizador_sintactico.py',38),
  ('declaracion_asignar -> CHAR IDENTIFICADOR CORIZQ NUMERO CORDER PUNTOCOMA','declaracion_asignar',6,'p_declaracion_asignar','analizador_sintactico.py',40),
  ('declaracion_asignar -> INT IDENTIFICADOR CORIZQ NUMERO CORDER PUNTOCOMA','declaracion_asignar',6,'p_declaracion_asignar','analizador_sintactico.py',41),
  ('declaracion_asignar -> FLOAT IDENTIFICADOR CORIZQ NUMERO CORDER PUNTOCOMA','declaracion_asignar',6,'p_declaracion_asignar','analizador_sintactico.py',42),
  ('declaracion_asignar -> CHAR IDENTIFICADOR COMA declaracion_asignar','declaracion_asignar',4,'p_declaracion_asignar','analizador_sintactico.py',44),
  ('declaracion_asignar -> INT IDENTIFICADOR COMA declaracion_asignar','declaracion_asignar',4,'p_declaracion_asignar','analizador_sintactico.py',45),
  ('declaracion_asignar -> FLOAT IDENTIFICADOR COMA declaracion_asignar','declaracion_asignar',4,'p_declaracion_asignar','analizador_sintactico.py',46),
  ('declaracion_asignar -> CHAR IDENTIFICADOR CORIZQ CORDER COMA declaracion_asignar','declaracion_asignar',6,'p_declaracion_asignar','analizador_sintactico.py',48),
  ('declaracion_asignar -> INT IDENTIFICADOR CORIZQ CORDER COMA declaracion_asignar','declaracion_asignar',6,'p_declaracion_asignar','analizador_sintactico.py',49),
  ('declaracion_asignar -> FLOAT IDENTIFICADOR CORIZQ CORDER COMA declaracion_asignar','declaracion_asignar',6,'p_declaracion_asignar','analizador_sintactico.py',50),
  ('declaracion_asignar -> CHAR IDENTIFICADOR CORIZQ NUMERO CORDER COMA declaracion_asignar','declaracion_asignar',7,'p_declaracion_asignar','analizador_sintactico.py',52),
  ('declaracion_asignar -> INT IDENTIFICADOR CORIZQ NUMERO CORDER COMA declaracion_asignar','declaracion_asignar',7,'p_declaracion_asignar','analizador_sintactico.py',53),
  ('declaracion_asignar -> FLOAT IDENTIFICADOR CORIZQ NUMERO CORDER COMA declaracion_asignar','declaracion_asignar',7,'p_declaracion_asignar','analizador_sintactico.py',54),
  ('declaracion_asignar -> IDENTIFICADOR COMA declaracion_asignar','declaracion_asignar',3,'p_declaracion_asignar','analizador_sintactico.py',56),
  ('declaracion_asignar -> IDENTIFICADOR PUNTOCOMA','declaracion_asignar',2,'p_declaracion_asignar','analizador_sintactico.py',57),
  ('declaracion_asignar -> IDENTIFICADOR CORIZQ CORDER COMA declaracion_asignar','declaracion_asignar',5,'p_declaracion_asignar','analizador_sintactico.py',59),
  ('declaracion_asignar -> IDENTIFICADOR CORIZQ CORDER PUNTOCOMA','declaracion_asignar',4,'p_declaracion_asignar','analizador_sintactico.py',60),
  ('declaracion_asignar -> IDENTIFICADOR CORIZQ NUMERO CORDER COMA declaracion_asignar','declaracion_asignar',6,'p_declaracion_asignar','analizador_sintactico.py',62),
  ('declaracion_asignar -> IDENTIFICADOR CORIZQ NUMERO CORDER PUNTOCOMA','declaracion_asignar',5,'p_declaracion_asignar','analizador_sintactico.py',63),
  ('declaracion_asignar -> INT IDENTIFICADOR ASIGNAR NUMERO PUNTOCOMA','declaracion_asignar',5,'p_declaracion_asignar','analizador_sintactico.py',65),
  ('declaracion_asignar -> CHAR IDENTIFICADOR ASIGNAR CADENA PUNTOCOMA','declaracion_asignar',5,'p_declaracion_asignar','analizador_sintactico.py',66),
  ('declaracion_asignar -> FLOAT IDENTIFICADOR ASIGNAR NUMERO PUNTOCOMA','declaracion_asignar',5,'p_declaracion_asignar','analizador_sintactico.py',67),
  ('declaracion_asignar -> IDENTIFICADOR ASIGNAR NUMERO PUNTOCOMA','declaracion_asignar',4,'p_declaracion_asignar','analizador_sintactico.py',69),
  ('declaracion_asignar -> IDENTIFICADOR ASIGNAR CADENA PUNTOCOMA','declaracion_asignar',4,'p_declaracion_asignar','analizador_sintactico.py',70),
  ('declaracion_asignar -> INT IDENTIFICADOR ASIGNAR IDENTIFICADOR PUNTOCOMA','declaracion_asignar',5,'p_declaracion_asignar','analizador_sintactico.py',72),
  ('declaracion_asignar -> CHAR IDENTIFICADOR ASIGNAR IDENTIFICADOR PUNTOCOMA','declaracion_asignar',5,'p_declaracion_asignar','analizador_sintactico.py',73),
  ('declaracion_asignar -> FLOAT IDENTIFICADOR ASIGNAR IDENTIFICADOR PUNTOCOMA','declaracion_asignar',5,'p_declaracion_asignar','analizador_sintactico.py',74),
  ('if -> SI PARIZQ condiciones_logicas PARDER','if',4,'p_expresion_SI_SINO','analizador_sintactico.py',81),
  ('if -> SI PARIZQ condiciones_logicas PARDER LLAIZQ instruccion LLADER','if',7,'p_expresion_SI_SINO','analizador_sintactico.py',82),
  ('if -> SI PARIZQ condiciones_logicas PARDER LLAIZQ instruccion LLADER SINO PARDER LLAIZQ instruccion LLADER','if',12,'p_expresion_SI_SINO','analizador_sintactico.py',83),
  ('comentario_lineal -> comments_ONELine','comentario_lineal',1,'p_comentario_lienal','analizador_sintactico.py',89),
  ('comentario_bloque -> comments','comentario_bloque',1,'p_comentario_bloque','analizador_sintactico.py',94),
  ('operaciones_math -> NUMERO SUMA NUMERO PUNTOCOMA','operaciones_math',4,'p_expresion_operaciones_math','analizador_sintactico.py',100),
  ('operaciones_math -> NUMERO RESTA NUMERO PUNTOCOMA','operaciones_math',4,'p_expresion_operaciones_math','analizador_sintactico.py',101),
  ('operaciones_math -> NUMERO MULT NUMERO PUNTOCOMA','operaciones_math',4,'p_expresion_operaciones_math','analizador_sintactico.py',102),
  ('operaciones_math -> NUMERO DIV NUMERO PUNTOCOMA','operaciones_math',4,'p_expresion_operaciones_math','analizador_sintactico.py',103),
  ('operaciones_math -> NUMERO POTENCIA NUMERO PUNTOCOMA','operaciones_math',4,'p_expresion_operaciones_math','analizador_sintactico.py',104),
  ('operaciones_math -> NUMERO MODULO NUMERO PUNTOCOMA','operaciones_math',4,'p_expresion_operaciones_math','analizador_sintactico.py',105),
  ('operaciones_math -> NUMERO SUMA NUMERO operaciones_math','operaciones_math',4,'p_expresion_operaciones_math','analizador_sintactico.py',107),
  ('operaciones_math -> NUMERO RESTA NUMERO operaciones_math','operaciones_math',4,'p_expresion_operaciones_math','analizador_sintactico.py',108),
  ('operaciones_math -> NUMERO MULT NUMERO operaciones_math','operaciones_math',4,'p_expresion_operaciones_math','analizador_sintactico.py',109),
  ('operaciones_math -> NUMERO DIV NUMERO operaciones_math','operaciones_math',4,'p_expresion_operaciones_math','analizador_sintactico.py',110),
  ('operaciones_math -> NUMERO POTENCIA NUMERO operaciones_math','operaciones_math',4,'p_expresion_operaciones_math','analizador_sintactico.py',111),
  ('operaciones_math -> NUMERO MODULO NUMERO operaciones_math','operaciones_math',4,'p_expresion_operaciones_math','analizador_sintactico.py',112),
  ('operaciones_math -> SUMA NUMERO PUNTOCOMA','operaciones_math',3,'p_expresion_operaciones_math','analizador_sintactico.py',114),
  ('operaciones_math -> RESTA NUMERO PUNTOCOMA','operaciones_math',3,'p_expresion_operaciones_math','analizador_sintactico.py',115),
  ('operaciones_math -> MULT NUMERO PUNTOCOMA','operaciones_math',3,'p_expresion_operaciones_math','analizador_sintactico.py',116),
  ('operaciones_math -> DIV NUMERO PUNTOCOMA','operaciones_math',3,'p_expresion_operaciones_math','analizador_sintactico.py',117),
  ('operaciones_math -> POTENCIA NUMERO PUNTOCOMA','operaciones_math',3,'p_expresion_operaciones_math','analizador_sintactico.py',118),
  ('operaciones_math -> MODULO NUMERO PUNTOCOMA','operaciones_math',3,'p_expresion_operaciones_math','analizador_sintactico.py',119),
  ('operacion_booleana -> expresion AND expresion','operacion_booleana',3,'p_operacion_booleana','analizador_sintactico.py',124),
  ('operacion_booleana -> expresion OR expresion','operacion_booleana',3,'p_operacion_booleana','analizador_sintactico.py',125),
  ('operacion_booleana -> expresion NOT expresion','operacion_booleana',3,'p_operacion_booleana','analizador_sintactico.py',126),
  ('condiciones_logicas -> IDENTIFICADOR RELATIONAL IDENTIFICADOR','condiciones_logicas',3,'p_condiciones_logicas','analizador_sintactico.py',130),
  ('condiciones_logicas -> NUMERO RELATIONAL NUMERO','condiciones_logicas',3,'p_condiciones_logicas','analizador_sintactico.py',131),
  ('condiciones_logicas -> IDENTIFICADOR RELATIONAL IDENTIFICADOR condiciones_logicas','condiciones_logicas',4,'p_condiciones_logicas','analizador_sintactico.py',132),
  ('condiciones_logicas -> IDENTIFICADOR LOGIC condiciones_logicas','condiciones_logicas',3,'p_condiciones_logicas','analizador_sintactico.py',133),
  ('condiciones_logicas -> BOOL','condiciones_logicas',1,'p_condiciones_logicas','analizador_sintactico.py',134),
  ('condiciones_logicas -> BOOL LOGIC condiciones_logicas','condiciones_logicas',3,'p_condiciones_logicas','analizador_sintactico.py',135),
  ('while -> MIENTRAS PARIZQ condiciones_logicas PARDER LLAIZQ instruccion LLADER','while',7,'p_expresion_mientras','analizador_sintactico.py',142),
  ('do -> DO PARIZQ instruccion PARDER while','do',5,'p_expresion_do','analizador_sintactico.py',146),
  ('instruccion -> declaracion_asignar','instruccion',1,'p_instruccion','analizador_sintactico.py',152),
  ('instruccion -> if','instruccion',1,'p_instruccion','analizador_sintactico.py',153),
  ('instruccion -> comentario_lineal','instruccion',1,'p_instruccion','analizador_sintactico.py',154),
  ('instruccion -> comentario_bloque','instruccion',1,'p_instruccion','analizador_sintactico.py',155),
  ('instruccion -> operacion_booleana','instruccion',1,'p_instruccion','analizador_sintactico.py',156),
  ('instruccion -> condiciones_logicas','instruccion',1,'p_instruccion','analizador_sintactico.py',157),
  ('instruccion -> while','instruccion',1,'p_instruccion','analizador_sintactico.py',158),
  ('instruccion -> do','instruccion',1,'p_instruccion','analizador_sintactico.py',159),
  ('instruccion -> empty','instruccion',1,'p_instruccion','analizador_sintactico.py',160),
  ('expresion -> INT IDENTIFICADOR CORIZQ ENTERO CORDER ASIGNAR LLAIZQ ENTERO COMA ENTERO COMA ENTERO COMA ENTERO LLADER PUNTOCOMA','expresion',16,'p_expresion_array','analizador_sintactico.py',165),
  ('expresion -> NUMERAL INCLUDE MENORQUE expresion MAYORQUE','expresion',5,'p_expresion_include','analizador_sintactico.py',171),
  ('expresion -> RESTA expresion','expresion',2,'p_expresion_uminus','analizador_sintactico.py',176),
  ('expresion -> COMDOB expresion COMDOB','expresion',3,'p_expresion_cadena','analizador_sintactico.py',181),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_nombre','analizador_sintactico.py',185),
]
